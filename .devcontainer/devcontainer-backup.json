{
	"name": "EchoSurface Environment",
	"dockerComposeFile": "docker-compose.yml",
	"service": "app",
	"workspaceFolder": "/workspaces/echosurface",
	
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"python.defaultInterpreterPath": "/usr/local/bin/python",
		"python.linting.enabled": true,
		"python.linting.pylintEnabled": true,
		"python.formatting.blackPath": "/usr/local/bin/black",
		"python.linting.flake8Path": "/usr/local/bin/flake8",
		"python.linting.pylintPath": "/usr/local/bin/pylint",
		"terminal.integrated.defaultProfile.linux": "bash",
		"terminal.integrated.profiles.linux": {
			"bash": {
				"path": "/bin/bash"
			}
		},
		"docker.showStartPage": false,
		"docker.dockerPath": "docker"
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-python.python",
		"ms-python.vscode-pylance",
		"ms-azuretools.vscode-docker",
		"github.copilot",
		"github.copilot-chat",
		"ms-toolsai.jupyter"
	],

	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		"ghcr.io/devcontainers/features/github-cli:1": {},
		"ghcr.io/devcontainers/features/desktop-lite:1": {},
		// Configure Docker-in-Docker properly to avoid conflicts
		"ghcr.io/devcontainers/features/docker-in-docker:2": {
			"version": "latest",
			"dockerDashComposeVersion": "v2",
			"moby": true,
			"installDockerBuildx": true
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [6080, 5901, 5432, 5900],
	
	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",

	// Use 'initializeCommand' to run commands on the host before the container is created.
	"initializeCommand": "mkdir -p ${localWorkspaceFolder}/browser_data ${localWorkspaceFolder}/deep_tree_echo_profile",

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "bash -c '/usr/local/bin/init-xserver.sh && echo \"X server initialized\" && pip install --no-cache-dir -r requirements.txt || echo \"Failed to install some requirements\"'",

	// Use 'postStartCommand' to run commands when the container starts.
	"postStartCommand": "bash -c '/usr/local/bin/check-browser-env.sh && echo \"Docker environment setup complete\"'"
}
